// <auto-generated />
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240731092723_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.BookModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<string>("NameBook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameGenre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SetBooxsId")
                        .HasColumnType("bigint");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SetBooxsId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library.Models.LibraryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NameGenre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Library");
                });

            modelBuilder.Entity("Library.Models.SetBooksModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ShelfId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShelfId");

                    b.ToTable("SetBooks");
                });

            modelBuilder.Entity("Library.Models.ShelfModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<long>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameShelf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Shelives");
                });

            modelBuilder.Entity("Library.Models.BookModel", b =>
                {
                    b.HasOne("Library.Models.SetBooksModel", "SetBooks")
                        .WithMany("Books")
                        .HasForeignKey("SetBooxsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetBooks");
                });

            modelBuilder.Entity("Library.Models.SetBooksModel", b =>
                {
                    b.HasOne("Library.Models.ShelfModel", "Shelf")
                        .WithMany("SetBooks")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("Library.Models.ShelfModel", b =>
                {
                    b.HasOne("Library.Models.LibraryModel", "Library")
                        .WithMany("shelfs")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("Library.Models.LibraryModel", b =>
                {
                    b.Navigation("shelfs");
                });

            modelBuilder.Entity("Library.Models.SetBooksModel", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Models.ShelfModel", b =>
                {
                    b.Navigation("SetBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
